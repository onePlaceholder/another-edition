plugins {
    id 'dev.architectury.loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven { url = "https://maven.createmod.net" }
    maven { url = "https://maven.ithundxr.dev/snapshots" }
}

dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.layered {
        it.mappings("net.fabricmc:yarn:$project.yarn_mappings:v2")
        it.mappings("dev.architectury:yarn-mappings-patch-neoforge:$project.yarn_mappings_patch_version")
    }
    neoForge "net.neoforged:neoforge:$project.neoforge_version"

    modImplementation "me.shedaniel.cloth:cloth-config-neoforge:${project.cloth_config_version}"
    modImplementation "maven.modrinth:jade:$project.jade_version_id"
    modImplementation "maven.modrinth:curios:$project.curios_version_id"
    modImplementation "maven.modrinth:just-zoom:$project.justzoom_version_id"
    modImplementation "maven.modrinth:konkrete:$project.konkrete_version_id"
    modImplementation "maven.modrinth:coordinateshud:$project.coordinateshud_version_id"
    modImplementation "maven.modrinth:patchouli:$project.patchouli_version_id"

    modImplementation("com.simibubi.create:create-${minecraft_version}:${create_version}") { transitive = false }
    modImplementation("net.createmod.ponder:Ponder-NeoForge-${minecraft_version}:${ponder_version}")
    modImplementation("dev.engine-room.flywheel:flywheel-neoforge-${minecraft_version}:${flywheel_version}")
    implementation("com.tterrag.registrate:Registrate:${registrate_version}")

}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: inputs.properties.version
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
